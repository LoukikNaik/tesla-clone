{"version":3,"sources":["features/Car/carSlice.js","components/logo.svg","components/Header.js","components/Section.js","components/Home.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["carSlice","createSlice","name","initialState","cars","reducers","selectCars","state","car","Header","useState","burgerStatus","setBurgerStatus","useSelector","Container","src","TLogo","alt","map","index","href","RightMenu","CustomMenu","onClick","BurgerNav","show","CloseWrapper","CustomClose","styled","div","Menu","MenuIcon","props","CloseIcon","Section","title","description","leftBtnTxt","rightBtnTxt","backgroundImg","Wrap","bgImage","bottom","ItemText","Buttons","ButtonGroup","LeftButton","RightButton","DownArrow","img","Home","id","App","className","store","configureStore","reducer","carReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca30cef5.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState={\n    cars:[\"Model S\",\"Model 3\",\"Model X\",\"Model Y\"]\n}\n\nconst carSlice=createSlice({\n    name:\"car\",\n    initialState,\n    reducers: {}\n})\n\nexport const selectCars=state=> state.car.cars\n\nexport default carSlice.reducer","export default __webpack_public_path__ + \"static/media/logo.a7b59bc6.svg\";","import React,{useState} from 'react'\nimport styled from 'styled-components'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {selectCars} from '../features/Car/carSlice';\nimport {useSelector} from 'react-redux';\nimport TLogo from \"./logo.svg\";\n//import Container from './components/Home.js'\n\nfunction Header() {\n    const[burgerStatus, setBurgerStatus] = useState(false)\n    const cars=useSelector(selectCars)\n    return (\n        <Container>\n            <a>\n                <img src={TLogo} alt=\"\" />\n            </a>\n            <Menu>\n                {cars && cars.map((car, index)=>(\n                    <a key={index} href=\"#Y\">{car}</a>\n                ))}\n            </Menu>\n            <RightMenu>\n                <a href=\"#\">Shop</a>\n                <a href=\"#\">Tesla Account</a>\n                <CustomMenu onClick={()=>setBurgerStatus(true)}/>\n            </RightMenu>\n            <BurgerNav show={burgerStatus}>\n                <CloseWrapper>\n                    <CustomClose onClick={()=>setBurgerStatus(false)}/>\n                </CloseWrapper>\n                {cars && cars.map((car, index)=>(\n                    <li key={index}><a key={index} href=\"\">{car}</a></li>\n                ))}\n                <li><a href=\"\">Existing Inventory</a></li>\n                <li><a href=\"\">Used Inventory</a></li>\n                <li><a href=\"\">Trade-in</a></li>\n                <li><a href=\"\">Cybertruck</a></li>\n                <li><a href=\"\">Roadster</a></li>\n            </BurgerNav>\n        </Container>\n    )\n}\n\nexport default Header\n\nconst Container=styled.div `\n    min-height: 60px;\n    position: fixed;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 20px;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 1;\n`\n\nconst Menu=styled.div `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex: 1;\n    a{\n        font-weight: 600;\n        text-transform: uppercase;\n        padding: 0 10px;\n        flex-wrap: nowrap;\n    }\n    @media(max-width: 768px){\n        display: none;\n    }\n\n`\nconst RightMenu=styled.div `\n    display: flex;\n    align-items: center;\n    // justify-content: center;\n    // flex: 1;\n    a{\n        font-weight: 600;\n        text-transform: uppercase;\n        margin-right: 10px;\n    }\n`\nconst CustomMenu=styled(MenuIcon) `\n    cursor: pointer;\n`\nconst BurgerNav=styled.div `\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    background: white;\n    width: 300px;\n    z-index: 16;\n    list-style: none;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    text-align: start;\n    transform: ${props => props.show ? 'translateX(0)': 'translateX(100%)'};\n    transition: transform 0.2s;\n    li{\n        padding: 15px 0;\n        border-bottom: 1px solid rgba(0,0,0,.2);\n        a{\n            font-weight: 600;\n        }\n    }\n`\n\nconst CustomClose=styled(CloseIcon) `\n    cursor: pointer;\n\n`\n\nconst CloseWrapper=styled.div `\n    display: flex;\n    justify-content: flex-end;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport Fade from 'react-reveal/Fade';\n\nfunction Section({title,description,leftBtnTxt,rightBtnTxt,backgroundImg}) {\n    return (\n        <Wrap bgImage = {backgroundImg} >\n            <Fade bottom>\n                <ItemText>\n                    <h1>{title}</h1>\n                    <p>{description}</p>\n                </ItemText>\n            </Fade>\n            <Buttons> \n                <Fade bottom>\n                    <ButtonGroup>\n                        <LeftButton>\n                            {leftBtnTxt}\n                        </LeftButton>\n                        {\n                            rightBtnTxt && \n                            <RightButton>\n                            {rightBtnTxt}\n                            </RightButton>\n                        }\n                    </ButtonGroup>\n                </Fade>  \n                <DownArrow src=\"/images/down-arrow.svg\"/>\n            </Buttons>\n        </Wrap>\n    )\n}\n\nexport default Section\n\nconst Wrap = styled.div`\n    z-index: -1;\n    width: 100vw;\n    height: 100vh;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-image: ${props => `url(\"/images/${props.bgImage}\")`};\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n\n`\nconst ItemText=styled.div `\n    padding-top: 15vh;\n    text-align: center;\n`\nconst ButtonGroup=styled.div `\n    display: flex;\n    margin-bottom: 30px;\n    @media (max-width: 768px){\n        flex-direction: column;\n    }\n`\nconst LeftButton=styled.div `\n    background-color: rgba(23,26,32,0.8);\n    height: 40px;\n    width: 256px;\n    color: white;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 100px;\n    opacity: 0.85;\n    text-transform: uppercase;\n    font-size: 12px;\n    cursor: pointer;\n    margin: 8px;\n`\nconst RightButton=styled(LeftButton) `\n    background-color: white;\n    opacity: 0.65;\n    color: black;\n`\nconst DownArrow=styled.img `\n    height: 40px;\n    animation: animateDown infinite 1.5s;\n`\nconst Buttons=styled.div `\n`","import React from 'react'\nimport styled from 'styled-components'\nimport Header from './Header'\nimport Section from './Section'\nfunction Home() {\n    return (\n        <Container>\n            <Header/>\n            <Section \n                title=\"Model S\"\n                description=\"Order Online for Touchless Delivery\"\n                backgroundImg='model-s.jpg'\n                leftBtnTxt=\"Custom Order\"\n                rightBtnTxt=\"Existing Inventory\"\n\n            />\n            <Section \n                title=\"Model 3\"\n                description=\"Order Online for Touchless Delivery\"\n                backgroundImg=\"model-3.jpg\"\n                leftBtnTxt=\"Custom Order\"\n                rightBtnTxt=\"Existing Inventory\"\n            />\n            <Section \n                id=\"x\"\n                title=\"Model X\"\n                description=\"Order Online for Touchless Delivery\"\n                backgroundImg=\"model-x.jpg\"\n                leftBtnTxt=\"Custom Order\"\n                rightBtnTxt=\"Existing Inventory\"\n            />\n            <Section \n                id=\"Y\"\n                title=\"Model Y\"\n                description=\"Order Online for Touchless Delivery\"\n                backgroundImg=\"model-y.jpg\"\n                leftBtnTxt=\"Custom Order\"\n                rightBtnTxt=\"Existing Inventory\"\n            />\n            <Section\n                title=\"Lowest Cost Solar Panels in America\"\n                description=\"Money Back Guarantee\"\n                backgroundImg=\"solar-panel.jpg\"\n                leftBtnTxt=\"Order Now\"\n                rightBtnTxt=\"Learn More\"\n            />\n            <Section\n                title=\"Solar for New Roofs\"\n                description=\"Solar Roof Costs Less Than a New Roof Plus Solar Panels\"\n                backgroundImg=\"solar-roof.jpg\"\n                leftBtnTxt=\"Order Now\"\n                rightBtnTxt=\"Learn More\"\n            />\n            <Section\n                title=\"Accessories\"\n                description=\"\"\n                backgroundImg=\"accessories.jpg\"\n                leftBtnTxt=\"Shop now\"\n            />\n        </Container>\n    )\n}\n\nexport default Home\n\nconst Container = styled.div`\n    height: 100vh;\n`","import React from 'react';\nimport './App.css';\nimport Home from './components/Home';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport carReducer from \"../features/Car/carSlice\"\n\nexport const store = configureStore({\n  reducer: {\n    car: carReducer\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}